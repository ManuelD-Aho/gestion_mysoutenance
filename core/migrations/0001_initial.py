# Generated by Django 5.2.4 on 2025-07-22 23:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnneeAcademique',
            fields=[
                ('id_annee_academique', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_annee_academique', models.CharField(max_length=50)),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('est_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CritereConformite',
            fields=[
                ('id_critere', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_critere', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('est_actif', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_enseignant', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('telephone_professionnel', models.CharField(blank=True, max_length=20, null=True)),
                ('email_professionnel', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entreprise',
            fields=[
                ('id_entreprise', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_entreprise', models.CharField(max_length=200)),
                ('secteur_activite', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_etudiant', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('lieu_naissance', models.CharField(blank=True, max_length=100, null=True)),
                ('nationalite', models.CharField(blank=True, max_length=50, null=True)),
                ('sexe', models.CharField(blank=True, max_length=10, null=True)),
                ('adresse_postale', models.TextField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('email_contact_secondaire', models.EmailField(blank=True, max_length=255, null=True)),
                ('contact_urgence_nom', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_urgence_telephone', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id_fonction', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_fonction', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id_grade', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_grade', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='NiveauEtude',
            fields=[
                ('id_niveau_etude', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_niveau_etude', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PersonnelAdministratif',
            fields=[
                ('utilisateur', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profil_personnel', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('telephone_professionnel', models.CharField(blank=True, max_length=20, null=True)),
                ('email_professionnel', models.EmailField(blank=True, max_length=255, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ue',
            fields=[
                ('id_ue', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_ue', models.CharField(max_length=100)),
                ('credits_ue', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Penalite',
            fields=[
                ('id_penalite', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('type_penalite', models.CharField(choices=[('Financière', 'Financière'), ('Administrative', 'Administrative')], max_length=50)),
                ('montant_du', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('motif', models.TextField(blank=True, null=True)),
                ('statut_penalite', models.CharField(choices=[('PEN_DUE', 'Due'), ('PEN_REGLEE', 'Réglée'), ('PEN_ANNULEE', 'Annulée')], max_length=50)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_regularisation', models.DateTimeField(blank=True, null=True)),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.anneeacademique')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etudiant')),
                ('personnel_traitant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.personneladministratif')),
            ],
        ),
        migrations.CreateModel(
            name='RapportEtudiant',
            fields=[
                ('id_rapport_etudiant', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_rapport_etudiant', models.CharField(max_length=255)),
                ('theme', models.CharField(blank=True, max_length=255, null=True)),
                ('nombre_pages', models.IntegerField(blank=True, null=True)),
                ('statut_rapport', models.CharField(choices=[('RAP_BROUILLON', 'Brouillon'), ('RAP_SOUMIS', 'Soumis'), ('RAP_NON_CONF', 'Non Conforme'), ('RAP_CONF', 'Conforme'), ('RAP_EN_COMMISSION', 'En Commission'), ('RAP_CORRECT', 'En Correction'), ('RAP_REFUSE', 'Refusé'), ('RAP_VALID', 'Validé'), ('RAP_ARCHIVE', 'Archivé')], default='RAP_BROUILLON', max_length=50)),
                ('date_soumission', models.DateTimeField(blank=True, null=True)),
                ('directeur_memoire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.enseignant')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etudiant')),
            ],
        ),
        migrations.CreateModel(
            name='SessionValidation',
            fields=[
                ('id_session', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('nom_session', models.CharField(max_length=255)),
                ('date_debut_session', models.DateTimeField(blank=True, null=True)),
                ('date_fin_prevue', models.DateTimeField(blank=True, null=True)),
                ('mode_session', models.CharField(choices=[('presentiel', 'Présentiel'), ('en_ligne', 'En Ligne')], max_length=50)),
                ('statut_session', models.CharField(choices=[('planifiee', 'Planifiée'), ('en_cours', 'En cours'), ('cloturee', 'Clôturée')], default='planifiee', max_length=50)),
                ('president_session', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.enseignant')),
                ('rapports', models.ManyToManyField(related_name='sessions', to='core.rapportetudiant')),
            ],
        ),
        migrations.CreateModel(
            name='ProcesVerbal',
            fields=[
                ('id_compte_rendu', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_compte_rendu', models.TextField()),
                ('date_creation_pv', models.DateTimeField(auto_now_add=True)),
                ('statut_pv', models.CharField(choices=[('PV_BROUILLON', 'Brouillon'), ('PV_ATTENTE_APPROBATION', "En attente d'approbation"), ('PV_VALIDE', 'Validé'), ('PV_REJETE', 'Rejeté')], default='PV_BROUILLON', max_length=50)),
                ('redacteur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.enseignant')),
                ('session', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.sessionvalidation')),
            ],
        ),
        migrations.CreateModel(
            name='Specialite',
            fields=[
                ('id_specialite', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_specialite', models.CharField(max_length=100)),
                ('responsable_specialite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.enseignant')),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut_stage', models.DateField()),
                ('date_fin_stage', models.DateField(blank=True, null=True)),
                ('sujet_stage', models.TextField(blank=True, null=True)),
                ('nom_tuteur_entreprise', models.CharField(blank=True, max_length=100, null=True)),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.entreprise')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etudiant')),
            ],
            options={
                'unique_together': {('entreprise', 'etudiant', 'date_debut_stage')},
            },
        ),
        migrations.AddField(
            model_name='rapportetudiant',
            name='stage',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.stage'),
        ),
        migrations.CreateModel(
            name='Ecue',
            fields=[
                ('id_ecue', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('libelle_ecue', models.CharField(max_length=100)),
                ('credits_ecue', models.IntegerField(blank=True, null=True)),
                ('ue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ue')),
            ],
        ),
        migrations.CreateModel(
            name='FonctionEnseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut_occupation', models.DateField()),
                ('date_fin_occupation', models.DateField(blank=True, null=True)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enseignant')),
                ('fonction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.fonction')),
            ],
            options={
                'unique_together': {('enseignant', 'fonction', 'date_debut_occupation')},
            },
        ),
        migrations.CreateModel(
            name='GradeEnseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_acquisition', models.DateField()),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enseignant')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.grade')),
            ],
            options={
                'unique_together': {('enseignant', 'grade', 'date_acquisition')},
            },
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_inscription', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_inscription', models.DateTimeField()),
                ('statut_paiement', models.CharField(choices=[('PAIE_ATTENTE', 'En attente de paiement'), ('PAIE_OK', 'Payé'), ('PAIE_PARTIEL', 'Paiement partiel'), ('PAIE_RETARD', 'En retard de paiement')], max_length=50)),
                ('date_paiement', models.DateTimeField(blank=True, null=True)),
                ('decision_passage', models.CharField(blank=True, choices=[('DEC_ADMIS', 'Admis'), ('DEC_AJOURNE', 'Ajourné'), ('DEC_REDOUBLANT', 'Redoublant'), ('DEC_EXCLU', 'Exclu')], max_length=50, null=True)),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.anneeacademique')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etudiant')),
                ('niveau_etude', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.niveauetude')),
            ],
            options={
                'unique_together': {('etudiant', 'niveau_etude', 'annee_academique')},
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_evaluation', models.DateTimeField()),
                ('note', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('annee_academique', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.anneeacademique')),
                ('ecue', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.ecue')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etudiant')),
            ],
            options={
                'unique_together': {('etudiant', 'ecue', 'annee_academique')},
            },
        ),
        migrations.CreateModel(
            name='ConformiteRapportDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut_validation', models.CharField(choices=[('Conforme', 'Conforme'), ('Non Conforme', 'Non Conforme'), ('Non Applicable', 'Non Applicable')], max_length=50)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('date_verification', models.DateTimeField(auto_now_add=True)),
                ('critere', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.critereconformite')),
                ('rapport_etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rapportetudiant')),
            ],
            options={
                'unique_together': {('rapport_etudiant', 'critere')},
            },
        ),
        migrations.CreateModel(
            name='SectionRapport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre_section', models.CharField(max_length=255)),
                ('contenu_section', models.TextField(blank=True, null=True)),
                ('ordre', models.IntegerField(default=0)),
                ('rapport_etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rapportetudiant')),
            ],
            options={
                'ordering': ['ordre'],
                'unique_together': {('rapport_etudiant', 'titre_section')},
            },
        ),
        migrations.CreateModel(
            name='ValidationPv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision_validation_pv', models.CharField(choices=[('PV_APPROUVE', 'Approuvé'), ('PV_MODIF_DEMANDEE', 'Modification Demandée'), ('PV_REJETE', 'Rejeté')], max_length=50)),
                ('date_validation', models.DateTimeField(auto_now_add=True)),
                ('commentaire_validation_pv', models.TextField(blank=True, null=True)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enseignant')),
                ('proces_verbal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.procesverbal')),
            ],
            options={
                'unique_together': {('proces_verbal', 'enseignant')},
            },
        ),
        migrations.CreateModel(
            name='VoteCommission',
            fields=[
                ('id_vote', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('decision_vote', models.CharField(choices=[('VOTE_APPROUVE', 'Approuvé'), ('VOTE_REFUSE', 'Refusé'), ('VOTE_APPROUVE_RESERVE', 'Approuvé sous réserve'), ('VOTE_ABSTENTION', 'Abstention')], max_length=50)),
                ('commentaire_vote', models.TextField(blank=True, null=True)),
                ('date_vote', models.DateTimeField(auto_now_add=True)),
                ('tour_vote', models.IntegerField(default=1)),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.enseignant')),
                ('rapport_etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.rapportetudiant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sessionvalidation')),
            ],
            options={
                'unique_together': {('session', 'rapport_etudiant', 'enseignant', 'tour_vote')},
            },
        ),
    ]
